name: .NET Code Scan and Report

on:
  push:
    branches:
      - '**'

jobs:
  scan-dotnet-code:
    runs-on: windows-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore Dependencies
        run: dotnet restore ./MyDotNetApp/MyDotNetApp.csproj

      - name: Run dotnet format and generate report
        run: |
          dotnet tool install -g dotnet-format
          dotnet format ./MyDotNetApp/MyDotNetApp.csproj --verify-no-changes --report format-report.json || true

      - name: Build Project and Save Warnings
        run: |
          dotnet build ./MyDotNetApp/MyDotNetApp.csproj --no-incremental -v:normal > build_output.txt || true

      - name: Convert Build Output to CSV
        run: |
          import csv
          import re

          rows = [["Tool", "File", "Line", "Severity", "Message", "Rule/Code", "Category"]]

          with open("build_output.txt", "r") as file:
              for line in file:
                  match = re.search(r'(.+\.cs)\((\d+),\d+\): (warning|error) (\w+): (.+?) \[', line)
                  if match:
                      file_path, line_no, severity, rule, message = match.groups()
                      rows.append(["dotnet", file_path.strip(), line_no, severity.capitalize(), message.strip(), rule, "Compiler"])

          with open("dotnet-violation-report.csv", "w", newline='') as out_file:
              writer = csv.writer(out_file)
              writer.writerows(rows)
        shell: python

      - name: Upload Violation Report
        uses: actions/upload-artifact@v4
        with:
          name: dotnet-violation-report
          path: dotnet-violation-report.csv
